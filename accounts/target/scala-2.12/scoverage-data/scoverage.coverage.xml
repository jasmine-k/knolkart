<statements>
<statement><source>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Accounts.scala</source><package>services</package><class>Accounts</class><classType>Class</classType><fullClassName>services.Accounts</fullClassName><method>authenticate</method><path>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Accounts.scala</path><id>23</id><start>735</start><end>1210</end><line>29</line><description>scala.concurrent.Future.apply[(String, Boolean)]({
  val userDetailsResult: scala.collection.mutable.Map[Long,models.User] = Accounts.this.user.filter(((userDetails: (Long, models.User)) =&gt; userDetails._2.userName.==(userName).&amp;&amp;(userDetails._2.password.==(password))));
  if (userDetailsResult.isEmpty)
    scala.Tuple2.apply[String, Boolean](&quot;Invalid details..Login failed&quot;, false)
  else
    {
      val now: java.util.Calendar = java.util.Calendar.getInstance();
      scala.Tuple2.apply[String, Boolean](org.mindrot.jbcrypt.BCrypt.hashpw(now.get(12).toString(), org.mindrot.jbcrypt.BCrypt.gensalt()), true)
    }
})(scala.concurrent.ExecutionContext.Implicits.global)</description><symbolName>scala.concurrent.Future.apply</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Database.scala</source><package>services</package><class>Database</class><classType>Trait</classType><fullClassName>services.Database</fullClassName><method>&lt;none&gt;</method><path>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Database.scala</path><id>32</id><start>289</start><end>354</end><line>13</line><description>scala.Predef.ArrowAssoc[Long](9898989812L).-&gt;[models.User](models.User.apply(&quot;jas&quot;, &quot;kaur&quot;, 9898989812L, &quot;jas&quot;, &quot;jasmine&quot;))</description><symbolName>scala.Predef.ArrowAssoc.-&gt;</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Accounts.scala</source><package>services</package><class>Accounts</class><classType>Class</classType><fullClassName>services.Accounts</fullClassName><method>addUser</method><path>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Accounts.scala</path><id>8</id><start>620</start><end>625</end><line>23</line><description>false</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Block</treeName><branch>true</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Accounts.scala</source><package>services</package><class>Accounts</class><classType>Class</classType><fullClassName>services.Accounts</fullClassName><method>authenticate</method><path>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Accounts.scala</path><id>17</id><start>1138</start><end>1171</end><line>37</line><description>now.get(12).toString()</description><symbolName>scala.Any.toString</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Database.scala</source><package>services</package><class>Database</class><classType>Trait</classType><fullClassName>services.Database</fullClassName><method>&lt;none&gt;</method><path>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Database.scala</path><id>26</id><start>147</start><end>212</end><line>11</line><description>scala.Predef.ArrowAssoc[Long](9898989810L).-&gt;[models.User](models.User.apply(&quot;jas&quot;, &quot;kaur&quot;, 9898989810L, &quot;jas&quot;, &quot;jasmine&quot;))</description><symbolName>scala.Predef.ArrowAssoc.-&gt;</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Accounts.scala</source><package>services</package><class>Accounts</class><classType>Class</classType><fullClassName>services.Accounts</fullClassName><method>authenticate</method><path>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Accounts.scala</path><id>11</id><start>803</start><end>877</end><line>30</line><description>userDetails._2.userName.==(userName).&amp;&amp;(userDetails._2.password.==(password))</description><symbolName>scala.Boolean.&amp;&amp;</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Database.scala</source><package>services</package><class>Database</class><classType>Trait</classType><fullClassName>services.Database</fullClassName><method>&lt;none&gt;</method><path>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Database.scala</path><id>29</id><start>218</start><end>283</end><line>12</line><description>scala.Predef.ArrowAssoc[Long](9898989811L).-&gt;[models.User](models.User.apply(&quot;jas&quot;, &quot;kaur&quot;, 9898989811L, &quot;jas&quot;, &quot;jasmine&quot;))</description><symbolName>scala.Predef.ArrowAssoc.-&gt;</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Accounts.scala</source><package>services</package><class>Accounts</class><classType>Class</classType><fullClassName>services.Accounts</fullClassName><method>addUser</method><path>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Accounts.scala</path><id>2</id><start>521</start><end>576</end><line>19</line><description>models.User.apply(firstName, lastName, mobileNo, userName, password)</description><symbolName>models.User.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Accounts.scala</source><package>services</package><class>Accounts</class><classType>Class</classType><fullClassName>services.Accounts</fullClassName><method>authenticate</method><path>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Accounts.scala</path><id>20</id><start>1190</start><end>1194</end><line>37</line><description>true</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Literal</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Accounts.scala</source><package>services</package><class>Accounts</class><classType>Class</classType><fullClassName>services.Accounts</fullClassName><method>addUser</method><path>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Accounts.scala</path><id>5</id><start>586</start><end>590</end><line>20</line><description>true</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Literal</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Accounts.scala</source><package>services</package><class>Accounts</class><classType>Class</classType><fullClassName>services.Accounts</fullClassName><method>authenticate</method><path>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Accounts.scala</path><id>14</id><start>926</start><end>966</end><line>32</line><description>scala.Tuple2.apply[String, Boolean](&quot;Invalid details..Login failed&quot;, false)</description><symbolName>scala.Tuple2.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Accounts.scala</source><package>services</package><class>Accounts</class><classType>Class</classType><fullClassName>services.Accounts</fullClassName><method>authenticate</method><path>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Accounts.scala</path><id>13</id><start>889</start><end>914</end><line>31</line><description>userDetailsResult.isEmpty</description><symbolName>scala.collection.MapLike.isEmpty</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Accounts.scala</source><package>services</package><class>Accounts</class><classType>Class</classType><fullClassName>services.Accounts</fullClassName><method>addUser</method><path>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Accounts.scala</path><id>4</id><start>500</start><end>577</end><line>19</line><description>Accounts.this.user.+=(scala.Predef.ArrowAssoc[Long](mobileNo).-&gt;[models.User](models.User.apply(firstName, lastName, mobileNo, userName, password)))</description><symbolName>scala.collection.mutable.MapLike.+=</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Database.scala</source><package>services</package><class>Database</class><classType>Trait</classType><fullClassName>services.Database</fullClassName><method>&lt;none&gt;</method><path>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Database.scala</path><id>31</id><start>304</start><end>354</end><line>13</line><description>models.User.apply(&quot;jas&quot;, &quot;kaur&quot;, 9898989812L, &quot;jas&quot;, &quot;jasmine&quot;)</description><symbolName>models.User.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Accounts.scala</source><package>services</package><class>Accounts</class><classType>Class</classType><fullClassName>services.Accounts</fullClassName><method>authenticate</method><path>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Accounts.scala</path><id>22</id><start>986</start><end>1203</end><line>34</line><description>{
  val now: java.util.Calendar = java.util.Calendar.getInstance();
  scala.Tuple2.apply[String, Boolean](org.mindrot.jbcrypt.BCrypt.hashpw(now.get(12).toString(), org.mindrot.jbcrypt.BCrypt.gensalt()), true)
}</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Block</treeName><branch>true</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Accounts.scala</source><package>services</package><class>Accounts</class><classType>Class</classType><fullClassName>services.Accounts</fullClassName><method>addUser</method><path>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Accounts.scala</path><id>7</id><start>620</start><end>625</end><line>23</line><description>false</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Literal</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Accounts.scala</source><package>services</package><class>Accounts</class><classType>Class</classType><fullClassName>services.Accounts</fullClassName><method>authenticate</method><path>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Accounts.scala</path><id>16</id><start>1092</start><end>1114</end><line>36</line><description>java.util.Calendar.getInstance()</description><symbolName>java.util.Calendar.getInstance</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Database.scala</source><package>services</package><class>Database</class><classType>Trait</classType><fullClassName>services.Database</fullClassName><method>&lt;none&gt;</method><path>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Database.scala</path><id>25</id><start>162</start><end>212</end><line>11</line><description>models.User.apply(&quot;jas&quot;, &quot;kaur&quot;, 9898989810L, &quot;jas&quot;, &quot;jasmine&quot;)</description><symbolName>models.User.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Accounts.scala</source><package>services</package><class>Accounts</class><classType>Class</classType><fullClassName>services.Accounts</fullClassName><method>authenticate</method><path>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Accounts.scala</path><id>10</id><start>842</start><end>877</end><line>30</line><description>userDetails._2.password.==(password)</description><symbolName>java.lang.Object.==</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Accounts.scala</source><package>services</package><class>Accounts</class><classType>Class</classType><fullClassName>services.Accounts</fullClassName><method>addUser</method><path>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Accounts.scala</path><id>1</id><start>461</start><end>488</end><line>18</line><description>password.==(confirmPassword)</description><symbolName>java.lang.Object.==</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Database.scala</source><package>services</package><class>Database</class><classType>Trait</classType><fullClassName>services.Database</fullClassName><method>&lt;none&gt;</method><path>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Database.scala</path><id>28</id><start>233</start><end>283</end><line>12</line><description>models.User.apply(&quot;jas&quot;, &quot;kaur&quot;, 9898989811L, &quot;jas&quot;, &quot;jasmine&quot;)</description><symbolName>models.User.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Accounts.scala</source><package>services</package><class>Accounts</class><classType>Class</classType><fullClassName>services.Accounts</fullClassName><method>authenticate</method><path>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Accounts.scala</path><id>19</id><start>1124</start><end>1189</end><line>37</line><description>org.mindrot.jbcrypt.BCrypt.hashpw(now.get(12).toString(), org.mindrot.jbcrypt.BCrypt.gensalt())</description><symbolName>org.mindrot.jbcrypt.BCrypt.hashpw</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Database.scala</source><package>services</package><class>Database</class><classType>Trait</classType><fullClassName>services.Database</fullClassName><method>&lt;none&gt;</method><path>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Database.scala</path><id>27</id><start>218</start><end>229</end><line>12</line><description>9898989811L</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Literal</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Accounts.scala</source><package>services</package><class>Accounts</class><classType>Class</classType><fullClassName>services.Accounts</fullClassName><method>addUser</method><path>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Accounts.scala</path><id>9</id><start>442</start><end>639</end><line>17</line><description>scala.concurrent.Future.apply[Boolean](if (password.==(confirmPassword))
  {
    Accounts.this.user.+=(scala.Predef.ArrowAssoc[Long](mobileNo).-&gt;[models.User](models.User.apply(firstName, lastName, mobileNo, userName, password)));
    true
  }
else
  false)(scala.concurrent.ExecutionContext.Implicits.global)</description><symbolName>scala.concurrent.Future.apply</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Accounts.scala</source><package>services</package><class>Accounts</class><classType>Class</classType><fullClassName>services.Accounts</fullClassName><method>authenticate</method><path>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Accounts.scala</path><id>18</id><start>1172</start><end>1188</end><line>37</line><description>org.mindrot.jbcrypt.BCrypt.gensalt()</description><symbolName>org.mindrot.jbcrypt.BCrypt.gensalt</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Accounts.scala</source><package>services</package><class>Accounts</class><classType>Class</classType><fullClassName>services.Accounts</fullClassName><method>authenticate</method><path>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Accounts.scala</path><id>12</id><start>774</start><end>878</end><line>30</line><description>Accounts.this.user.filter(((userDetails: (Long, models.User)) =&gt; userDetails._2.userName.==(userName).&amp;&amp;(userDetails._2.password.==(password))))</description><symbolName>scala.collection.TraversableLike.filter</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Accounts.scala</source><package>services</package><class>Accounts</class><classType>Class</classType><fullClassName>services.Accounts</fullClassName><method>addUser</method><path>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Accounts.scala</path><id>3</id><start>509</start><end>576</end><line>19</line><description>scala.Predef.ArrowAssoc[Long](mobileNo).-&gt;[models.User](models.User.apply(firstName, lastName, mobileNo, userName, password))</description><symbolName>scala.Predef.ArrowAssoc.-&gt;</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Accounts.scala</source><package>services</package><class>Accounts</class><classType>Class</classType><fullClassName>services.Accounts</fullClassName><method>authenticate</method><path>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Accounts.scala</path><id>21</id><start>1123</start><end>1195</end><line>37</line><description>scala.Tuple2.apply[String, Boolean](org.mindrot.jbcrypt.BCrypt.hashpw(now.get(12).toString(), org.mindrot.jbcrypt.BCrypt.gensalt()), true)</description><symbolName>scala.Tuple2.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Database.scala</source><package>services</package><class>Database</class><classType>Trait</classType><fullClassName>services.Database</fullClassName><method>&lt;none&gt;</method><path>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Database.scala</path><id>30</id><start>289</start><end>300</end><line>13</line><description>9898989812L</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Literal</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Accounts.scala</source><package>services</package><class>Accounts</class><classType>Class</classType><fullClassName>services.Accounts</fullClassName><method>authenticate</method><path>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Accounts.scala</path><id>15</id><start>926</start><end>966</end><line>32</line><description>scala.Tuple2.apply[String, Boolean](&quot;Invalid details..Login failed&quot;, false)</description><symbolName>scala.Tuple2.apply</symbolName><treeName>Block</treeName><branch>true</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Database.scala</source><package>services</package><class>Database</class><classType>Trait</classType><fullClassName>services.Database</fullClassName><method>&lt;none&gt;</method><path>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Database.scala</path><id>33</id><start>138</start><end>358</end><line>10</line><description>scala.collection.mutable.Map.apply[Long, models.User](scala.Predef.ArrowAssoc[Long](9898989810L).-&gt;[models.User](models.User.apply(&quot;jas&quot;, &quot;kaur&quot;, 9898989810L, &quot;jas&quot;, &quot;jasmine&quot;)), scala.Predef.ArrowAssoc[Long](9898989811L).-&gt;[models.User](models.User.apply(&quot;jas&quot;, &quot;kaur&quot;, 9898989811L, &quot;jas&quot;, &quot;jasmine&quot;)), scala.Predef.ArrowAssoc[Long](9898989812L).-&gt;[models.User](models.User.apply(&quot;jas&quot;, &quot;kaur&quot;, 9898989812L, &quot;jas&quot;, &quot;jasmine&quot;)))</description><symbolName>scala.collection.generic.GenMapFactory.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Accounts.scala</source><package>services</package><class>Accounts</class><classType>Class</classType><fullClassName>services.Accounts</fullClassName><method>addUser</method><path>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Accounts.scala</path><id>6</id><start>490</start><end>598</end><line>18</line><description>{
  Accounts.this.user.+=(scala.Predef.ArrowAssoc[Long](mobileNo).-&gt;[models.User](models.User.apply(firstName, lastName, mobileNo, userName, password)));
  true
}</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Block</treeName><branch>true</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Database.scala</source><package>services</package><class>Database</class><classType>Trait</classType><fullClassName>services.Database</fullClassName><method>&lt;none&gt;</method><path>/home/akshay/IdeaProjects/Test2/Test-2/accounts/src/main/scala/services/Database.scala</path><id>24</id><start>147</start><end>158</end><line>11</line><description>9898989810L</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Literal</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
</statements>